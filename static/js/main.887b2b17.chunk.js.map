{"version":3,"sources":["index.js"],"names":["Generator","createOrderedMap"],"mappings":"uGAAA,oGA4BaA,GAHEC,2BAAiB,IAGP,WAGrB,OACI,cAAC,cAAD,Q","file":"static/js/main.887b2b17.chunk.js","sourcesContent":["import React from \"react\";\n\n// Import UI Generator\nimport {\n    UIGenerator,                   // main component\n    isInvalid,                     // for validity checking\n    createEmptyStore, createStore, // for initial data-store creation\n    createMap, createOrderedMap,   // for deep immutables\n    storeUpdater,                  // for on change handling\n} from \"@ui-schema/ui-schema\";\n\n\n// individual components, e.g. use one `UIMetaProvider` for many `UIStoreProvider` instead of `UIGenerator`\nimport { UIStoreProvider } from '@ui-schema/ui-schema/UIStore';\nimport { UIMetaProvider } from '@ui-schema/ui-schema/UIMeta';\n// instead of `UIGenerator` use `UIRootRenderer` and pass down the schema\nimport { UIRootRenderer } from '@ui-schema/ui-schema/UIRootRenderer';\n\n// Simple translator for in-schema translation, keyword `t`\nimport { relTranslator } from '@ui-schema/ui-schema/Translate/relT'\n\n// import the widgets for your design-system.\nimport { widgets } from \"@ui-schema/ds-bootstrap\";\n\n// Empty Demo Schema & Data/Values\nconst schema = createOrderedMap({});\nconst values = {};\n\nexport const Generator = () => {\n    // here the state will be added\n\n    return (\n        <UIGenerator\n            /* here the props will be added */\n        />\n    )\n};"],"sourceRoot":""}